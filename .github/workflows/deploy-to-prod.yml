name: Build and Deploy executable

on:
  workflow_dispatch: # Manually triggered

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            git cmake make gcc g++ clang libmysqlclient-dev libssl-dev libbz2-dev \
            libreadline-dev libncurses-dev mysql-server libboost-all-dev \
            mold gdb nodejs npm ccache ninja-build

      # Set up ccache
      - name: Set up ccache
        run: |
          export CC="ccache gcc"
          export CXX="ccache g++"
          ccache --max-size=5G

      # Cache build artifacts and ccache
      - name: Restore build and ccache cache
        uses: actions/cache@v3
        with:
          path: |
            build
            ~/.ccache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      # Configure the build using Ninja
      - name: Configure CMake
        run: |
          cmake -S . -B build -G Ninja \
            -DTOOLS_BUILD=all \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/usr/local/server \
            -DSCRIPTS=static \
            -DMODULES=static

      # Build the application
      - name: Build the application
        run: cmake --build build --parallel $(nproc)

      # Install the application (prepares files for deployment)
      - name: Install application
        run: cmake --install build

      # Upload build artifacts
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: application
          path: /usr/local/server

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download build artifacts
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: application

      # Deploy to production server
      - name: Deploy to server
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > deploy_key
          chmod 600 deploy_key
          scp -i deploy_key -r /usr/local/server/bin $DEPLOY_USER@$DEPLOY_HOST:/usr/local/server/bin
          ssh -i deploy_key $DEPLOY_USER@$DEPLOY_HOST "sudo systemctl restart your-service-name"
